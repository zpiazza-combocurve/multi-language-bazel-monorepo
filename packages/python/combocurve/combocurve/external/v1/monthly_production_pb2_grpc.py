# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from combocurve.external.v1 import monthly_production_pb2 as combocurve_dot_external_dot_v1_dot_monthly__production__pb2


class ExternalMonthlyProductionServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Count = channel.unary_unary(
                '/combocurve.external.v1.ExternalMonthlyProductionService/Count',
                request_serializer=combocurve_dot_external_dot_v1_dot_monthly__production__pb2.ExternalMonthlyProductionServiceCountRequest.SerializeToString,
                response_deserializer=combocurve_dot_external_dot_v1_dot_monthly__production__pb2.ExternalMonthlyProductionServiceCountResponse.FromString,
                )
        self.Fetch = channel.unary_stream(
                '/combocurve.external.v1.ExternalMonthlyProductionService/Fetch',
                request_serializer=combocurve_dot_external_dot_v1_dot_monthly__production__pb2.ExternalMonthlyProductionServiceFetchRequest.SerializeToString,
                response_deserializer=combocurve_dot_external_dot_v1_dot_monthly__production__pb2.ExternalMonthlyProductionServiceFetchResponse.FromString,
                )
        self.Upsert = channel.stream_unary(
                '/combocurve.external.v1.ExternalMonthlyProductionService/Upsert',
                request_serializer=combocurve_dot_external_dot_v1_dot_monthly__production__pb2.ExternalMonthlyProductionServiceUpsertRequest.SerializeToString,
                response_deserializer=combocurve_dot_external_dot_v1_dot_monthly__production__pb2.ExternalMonthlyProductionServiceUpsertResponse.FromString,
                )
        self.DeleteByWell = channel.unary_unary(
                '/combocurve.external.v1.ExternalMonthlyProductionService/DeleteByWell',
                request_serializer=combocurve_dot_external_dot_v1_dot_monthly__production__pb2.ExternalMonthlyProductionServiceDeleteByWellRequest.SerializeToString,
                response_deserializer=combocurve_dot_external_dot_v1_dot_monthly__production__pb2.ExternalMonthlyProductionServiceDeleteByWellResponse.FromString,
                )


class ExternalMonthlyProductionServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Count(self, request, context):
        """Count monthly production data for multiple wells.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Fetch(self, request, context):
        """Fetch monthly production data for multiple wells.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Upsert(self, request_iterator, context):
        """Upsert monthly production data for multiple wells.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteByWell(self, request, context):
        """Delete production data for the given well. An optional date range can be
        provided to restrict the production data points to be deleted.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ExternalMonthlyProductionServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Count': grpc.unary_unary_rpc_method_handler(
                    servicer.Count,
                    request_deserializer=combocurve_dot_external_dot_v1_dot_monthly__production__pb2.ExternalMonthlyProductionServiceCountRequest.FromString,
                    response_serializer=combocurve_dot_external_dot_v1_dot_monthly__production__pb2.ExternalMonthlyProductionServiceCountResponse.SerializeToString,
            ),
            'Fetch': grpc.unary_stream_rpc_method_handler(
                    servicer.Fetch,
                    request_deserializer=combocurve_dot_external_dot_v1_dot_monthly__production__pb2.ExternalMonthlyProductionServiceFetchRequest.FromString,
                    response_serializer=combocurve_dot_external_dot_v1_dot_monthly__production__pb2.ExternalMonthlyProductionServiceFetchResponse.SerializeToString,
            ),
            'Upsert': grpc.stream_unary_rpc_method_handler(
                    servicer.Upsert,
                    request_deserializer=combocurve_dot_external_dot_v1_dot_monthly__production__pb2.ExternalMonthlyProductionServiceUpsertRequest.FromString,
                    response_serializer=combocurve_dot_external_dot_v1_dot_monthly__production__pb2.ExternalMonthlyProductionServiceUpsertResponse.SerializeToString,
            ),
            'DeleteByWell': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteByWell,
                    request_deserializer=combocurve_dot_external_dot_v1_dot_monthly__production__pb2.ExternalMonthlyProductionServiceDeleteByWellRequest.FromString,
                    response_serializer=combocurve_dot_external_dot_v1_dot_monthly__production__pb2.ExternalMonthlyProductionServiceDeleteByWellResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'combocurve.external.v1.ExternalMonthlyProductionService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ExternalMonthlyProductionService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Count(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/combocurve.external.v1.ExternalMonthlyProductionService/Count',
            combocurve_dot_external_dot_v1_dot_monthly__production__pb2.ExternalMonthlyProductionServiceCountRequest.SerializeToString,
            combocurve_dot_external_dot_v1_dot_monthly__production__pb2.ExternalMonthlyProductionServiceCountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Fetch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/combocurve.external.v1.ExternalMonthlyProductionService/Fetch',
            combocurve_dot_external_dot_v1_dot_monthly__production__pb2.ExternalMonthlyProductionServiceFetchRequest.SerializeToString,
            combocurve_dot_external_dot_v1_dot_monthly__production__pb2.ExternalMonthlyProductionServiceFetchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Upsert(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/combocurve.external.v1.ExternalMonthlyProductionService/Upsert',
            combocurve_dot_external_dot_v1_dot_monthly__production__pb2.ExternalMonthlyProductionServiceUpsertRequest.SerializeToString,
            combocurve_dot_external_dot_v1_dot_monthly__production__pb2.ExternalMonthlyProductionServiceUpsertResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteByWell(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/combocurve.external.v1.ExternalMonthlyProductionService/DeleteByWell',
            combocurve_dot_external_dot_v1_dot_monthly__production__pb2.ExternalMonthlyProductionServiceDeleteByWellRequest.SerializeToString,
            combocurve_dot_external_dot_v1_dot_monthly__production__pb2.ExternalMonthlyProductionServiceDeleteByWellResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
