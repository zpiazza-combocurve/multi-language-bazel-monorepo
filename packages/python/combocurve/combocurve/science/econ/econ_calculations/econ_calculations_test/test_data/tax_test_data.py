import numpy as np
import datetime
from bson.objectid import ObjectId

# TaxDeduct parameters
carbon_expenses_unecon = [
    {
        'category': 'co2e',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'category': 'co2',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'category': 'ch4',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'category': 'n2o',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
]

fixed_expenses_unecon = [
    {
        'category': 'monthly_well_cost',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'category': 'other_monthly_cost_1',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'category': 'other_monthly_cost_2',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'category': 'other_monthly_cost_3',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'category': 'other_monthly_cost_4',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'category': 'other_monthly_cost_5',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'category': 'other_monthly_cost_6',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'category': 'other_monthly_cost_7',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'category': 'other_monthly_cost_8',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
]

variable_expenses_unecon = [
    {
        'key': 'oil',
        'category': 'gathering',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'oil',
        'category': 'processing',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'oil',
        'category': 'transportation',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'oil',
        'category': 'marketing',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'oil',
        'category': 'other',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'gas',
        'category': 'gathering',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'gas',
        'category': 'processing',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'gas',
        'category': 'transportation',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'gas',
        'category': 'marketing',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'gas',
        'category': 'other',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'ngl',
        'category': 'gathering',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'ngl',
        'category': 'processing',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'ngl',
        'category': 'transportation',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'ngl',
        'category': 'marketing',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'ngl',
        'category': 'other',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'drip_condensate',
        'category': 'gathering',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'drip_condensate',
        'category': 'processing',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'drip_condensate',
        'category': 'transportation',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'drip_condensate',
        'category': 'marketing',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'drip_condensate',
        'category': 'other',
        'values': np.array([0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
]

water_disposal_unecon = [{
    'values': np.array([0.0]),
    'affect_econ_limit': 'yes',
    'deduct_before_severance_tax': 'no',
    'deduct_before_ad_val_tax': 'no',
}]

carbon_expenses_no_expense = [
    {
        'category': 'co2e',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'category': 'co2',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'category': 'ch4',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'category': 'n2o',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
]

fixed_expenses_no_expense = [
    {
        'category': 'monthly_well_cost',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'category': 'other_monthly_cost_1',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'category': 'other_monthly_cost_2',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'category': 'other_monthly_cost_3',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'category': 'other_monthly_cost_4',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'category': 'other_monthly_cost_5',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'category': 'other_monthly_cost_6',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'category': 'other_monthly_cost_7',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'category': 'other_monthly_cost_8',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
]

variable_expenses_no_expense = [
    {
        'key': 'oil',
        'category': 'gathering',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'oil',
        'category': 'processing',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'oil',
        'category': 'transportation',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'oil',
        'category': 'marketing',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'oil',
        'category': 'other',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'gas',
        'category': 'gathering',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'gas',
        'category': 'processing',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'gas',
        'category': 'transportation',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'gas',
        'category': 'marketing',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'gas',
        'category': 'other',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'ngl',
        'category': 'gathering',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'ngl',
        'category': 'processing',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'ngl',
        'category': 'transportation',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'ngl',
        'category': 'marketing',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'ngl',
        'category': 'other',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'drip_condensate',
        'category': 'gathering',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'drip_condensate',
        'category': 'processing',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'drip_condensate',
        'category': 'transportation',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'drip_condensate',
        'category': 'marketing',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
    {
        'key': 'drip_condensate',
        'category': 'other',
        'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'no',
        'deduct_before_ad_val_tax': 'no',
    },
]

water_disposal_no_expense = [{
    'values': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
    'affect_econ_limit': 'yes',
    'deduct_before_severance_tax': 'no',
    'deduct_before_ad_val_tax': 'no',
}]

carbon_expenses_deduct = [
    {
        'category': 'co2e',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
    {
        'category': 'co2',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
    {
        'category': 'ch4',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
    {
        'category': 'n2o',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
]

fixed_expenses_deduct = [
    {
        'category': 'monthly_well_cost',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
    {
        'category': 'other_monthly_cost_1',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
    {
        'category': 'other_monthly_cost_2',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
    {
        'category': 'other_monthly_cost_3',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
    {
        'category': 'other_monthly_cost_4',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
    {
        'category': 'other_monthly_cost_5',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
    {
        'category': 'other_monthly_cost_6',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
    {
        'category': 'other_monthly_cost_7',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
    {
        'category': 'other_monthly_cost_8',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
]

variable_expenses_deduct = [
    {
        'key': 'oil',
        'category': 'gathering',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
    {
        'key': 'oil',
        'category': 'processing',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
    {
        'key': 'oil',
        'category': 'transportation',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
    {
        'key': 'oil',
        'category': 'marketing',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
    {
        'key': 'oil',
        'category': 'other',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
    {
        'key': 'gas',
        'category': 'gathering',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
    {
        'key': 'gas',
        'category': 'processing',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
    {
        'key': 'gas',
        'category': 'transportation',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
    {
        'key': 'gas',
        'category': 'marketing',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
    {
        'key': 'gas',
        'category': 'other',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
    {
        'key': 'ngl',
        'category': 'gathering',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
    {
        'key': 'ngl',
        'category': 'processing',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
    {
        'key': 'ngl',
        'category': 'transportation',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
    {
        'key': 'ngl',
        'category': 'marketing',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
    {
        'key': 'ngl',
        'category': 'other',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
    {
        'key': 'drip_condensate',
        'category': 'gathering',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
    {
        'key': 'drip_condensate',
        'category': 'processing',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
    {
        'key': 'drip_condensate',
        'category': 'transportation',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
    {
        'key': 'drip_condensate',
        'category': 'marketing',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
    {
        'key': 'drip_condensate',
        'category': 'other',
        'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
        'affect_econ_limit': 'yes',
        'deduct_before_severance_tax': 'yes',
        'deduct_before_ad_val_tax': 'yes',
    },
]

water_disposal_deduct = [{
    'values': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
    'affect_econ_limit': 'yes',
    'deduct_before_severance_tax': 'yes',
    'deduct_before_ad_val_tax': 'yes',
}]

ownership_volume_dict = {
    'unecon': {
        'well_head': {
            'time': np.array([0]),
            'oil': {
                'wi': np.array([0.0]),
                'nri': np.array([0.0]),
                'lease_nri': np.array([0.0]),
                'one_minus_wi': np.array([0.0]),
                'one_minus_nri': np.array([0.0]),
                'one_minus_lease_nri': np.array([0.0]),
                'wi_minus_one': np.array([-0.0]),
                'nri_minus_one': np.array([-0.0]),
                'lease_nri_minus_one': np.array([-0.0]),
                '100_pct_wi': np.array([0]),
            },
            'gas': {
                'wi': np.array([0.0]),
                'nri': np.array([0.0]),
                'lease_nri': np.array([0.0]),
                'one_minus_wi': np.array([0.0]),
                'one_minus_nri': np.array([0.0]),
                'one_minus_lease_nri': np.array([0.0]),
                'wi_minus_one': np.array([-0.0]),
                'nri_minus_one': np.array([-0.0]),
                'lease_nri_minus_one': np.array([-0.0]),
                '100_pct_wi': np.array([0]),
            },
            'water': {
                'wi': np.array([0.0]),
                'nri': np.array([0.0]),
                'lease_nri': np.array([0.0]),
                'one_minus_wi': np.array([0.0]),
                'one_minus_nri': np.array([0.0]),
                'one_minus_lease_nri': np.array([0.0]),
                'wi_minus_one': np.array([-0.0]),
                'nri_minus_one': np.array([-0.0]),
                'lease_nri_minus_one': np.array([-0.0]),
                '100_pct_wi': np.array([0]),
            },
        },
        'unshrunk': {
            'time': np.array([0]),
            'oil': {
                'wi': np.array([0.0]),
                'nri': np.array([0.0]),
                'lease_nri': np.array([0.0]),
                'one_minus_wi': np.array([0.0]),
                'one_minus_nri': np.array([0.0]),
                'one_minus_lease_nri': np.array([0.0]),
                'wi_minus_one': np.array([-0.0]),
                'nri_minus_one': np.array([-0.0]),
                'lease_nri_minus_one': np.array([-0.0]),
                '100_pct_wi': np.array([0.0]),
            },
            'gas': {
                'wi': np.array([0.0]),
                'nri': np.array([0.0]),
                'lease_nri': np.array([0.0]),
                'one_minus_wi': np.array([0.0]),
                'one_minus_nri': np.array([0.0]),
                'one_minus_lease_nri': np.array([0.0]),
                'wi_minus_one': np.array([-0.0]),
                'nri_minus_one': np.array([-0.0]),
                'lease_nri_minus_one': np.array([-0.0]),
                '100_pct_wi': np.array([0.0]),
            },
            'water': {
                'wi': np.array([0.0]),
                'nri': np.array([0.0]),
                'lease_nri': np.array([0.0]),
                'one_minus_wi': np.array([0.0]),
                'one_minus_nri': np.array([0.0]),
                'one_minus_lease_nri': np.array([0.0]),
                'wi_minus_one': np.array([-0.0]),
                'nri_minus_one': np.array([-0.0]),
                'lease_nri_minus_one': np.array([-0.0]),
                '100_pct_wi': np.array([0]),
            },
        },
        'sales': {
            'time': np.array([0]),
            'oil': {
                'wi': np.array([0.0]),
                'nri': np.array([0.0]),
                'lease_nri': np.array([0.0]),
                'one_minus_wi': np.array([0.0]),
                'one_minus_nri': np.array([0.0]),
                'one_minus_lease_nri': np.array([0.0]),
                'wi_minus_one': np.array([-0.0]),
                'nri_minus_one': np.array([-0.0]),
                'lease_nri_minus_one': np.array([-0.0]),
                '100_pct_wi': np.array([0.0]),
            },
            'gas': {
                'wi': np.array([0.0]),
                'nri': np.array([0.0]),
                'lease_nri': np.array([0.0]),
                'one_minus_wi': np.array([0.0]),
                'one_minus_nri': np.array([0.0]),
                'one_minus_lease_nri': np.array([0.0]),
                'wi_minus_one': np.array([-0.0]),
                'nri_minus_one': np.array([-0.0]),
                'lease_nri_minus_one': np.array([-0.0]),
                '100_pct_wi': np.array([0.0]),
            },
            'water': {
                'wi': np.array([0.0]),
                'nri': np.array([0.0]),
                'lease_nri': np.array([0.0]),
                'one_minus_wi': np.array([0.0]),
                'one_minus_nri': np.array([0.0]),
                'one_minus_lease_nri': np.array([0.0]),
                'wi_minus_one': np.array([-0.0]),
                'nri_minus_one': np.array([-0.0]),
                'lease_nri_minus_one': np.array([-0.0]),
                '100_pct_wi': np.array([0]),
            },
            'ngl': {
                'wi': np.array([0.0]),
                'nri': np.array([0.0]),
                'lease_nri': np.array([0.0]),
                'one_minus_wi': np.array([0.0]),
                'one_minus_nri': np.array([0.0]),
                'one_minus_lease_nri': np.array([0.0]),
                'wi_minus_one': np.array([-0.0]),
                'nri_minus_one': np.array([-0.0]),
                'lease_nri_minus_one': np.array([-0.0]),
                '100_pct_wi': np.array([0.0]),
            },
            'drip_condensate': {
                'wi': np.array([0.0]),
                'nri': np.array([0.0]),
                'lease_nri': np.array([0.0]),
                'one_minus_wi': np.array([0.0]),
                'one_minus_nri': np.array([0.0]),
                'one_minus_lease_nri': np.array([0.0]),
                'wi_minus_one': np.array([-0.0]),
                'nri_minus_one': np.array([-0.0]),
                'lease_nri_minus_one': np.array([-0.0]),
                '100_pct_wi': np.array([0.0]),
            },
        },
        'boe': {
            'well_head_boe': {
                'total': np.array([0.0]),
                'wi': np.array([0.0]),
                'nri': np.array([0.0]),
                'lease_nri': np.array([0.0]),
                'one_minus_wi': np.array([0.0]),
                'one_minus_nri': np.array([0.0]),
                'one_minus_lease_nri': np.array([0.0]),
                'wi_minus_one': np.array([0.0]),
                'nri_minus_one': np.array([0.0]),
                'lease_nri_minus_one': np.array([0.0]),
                '100_pct_wi': np.array([0.0]),
            },
            'unshrunk_boe': {
                'total': np.array([0.0]),
                'wi': np.array([0.0]),
                'nri': np.array([0.0]),
                'lease_nri': np.array([0.0]),
                'one_minus_wi': np.array([0.0]),
                'one_minus_nri': np.array([0.0]),
                'one_minus_lease_nri': np.array([0.0]),
                'wi_minus_one': np.array([0.0]),
                'nri_minus_one': np.array([0.0]),
                'lease_nri_minus_one': np.array([0.0]),
                '100_pct_wi': np.array([0.0]),
            },
            'sales_boe': {
                'total': np.array([0.0]),
                'wi': np.array([0.0]),
                'nri': np.array([0.0]),
                'lease_nri': np.array([0.0]),
                'one_minus_wi': np.array([0.0]),
                'one_minus_nri': np.array([0.0]),
                'one_minus_lease_nri': np.array([0.0]),
                'wi_minus_one': np.array([0.0]),
                'nri_minus_one': np.array([0.0]),
                'lease_nri_minus_one': np.array([0.0]),
                '100_pct_wi': np.array([0.0]),
            },
        },
        'mcfe': {
            'well_head_mcfe': {
                'total': np.array([0.0]),
                'wi': np.array([0.0]),
                'nri': np.array([0.0]),
                'lease_nri': np.array([0.0]),
                'one_minus_wi': np.array([0.0]),
                'one_minus_nri': np.array([0.0]),
                'one_minus_lease_nri': np.array([0.0]),
                'wi_minus_one': np.array([0.0]),
                'nri_minus_one': np.array([0.0]),
                'lease_nri_minus_one': np.array([0.0]),
                '100_pct_wi': np.array([0.0]),
            },
            'unshrunk_mcfe': {
                'total': np.array([0.0]),
                'wi': np.array([0.0]),
                'nri': np.array([0.0]),
                'lease_nri': np.array([0.0]),
                'one_minus_wi': np.array([0.0]),
                'one_minus_nri': np.array([0.0]),
                'one_minus_lease_nri': np.array([0.0]),
                'wi_minus_one': np.array([0.0]),
                'nri_minus_one': np.array([0.0]),
                'lease_nri_minus_one': np.array([0.0]),
                '100_pct_wi': np.array([0.0]),
            },
            'sales_mcfe': {
                'total': np.array([0.0]),
                'wi': np.array([0.0]),
                'nri': np.array([0.0]),
                'lease_nri': np.array([0.0]),
                'one_minus_wi': np.array([0.0]),
                'one_minus_nri': np.array([0.0]),
                'one_minus_lease_nri': np.array([0.0]),
                'wi_minus_one': np.array([0.0]),
                'nri_minus_one': np.array([0.0]),
                'lease_nri_minus_one': np.array([0.0]),
                '100_pct_wi': np.array([0.0]),
            },
        },
    },
    'econ': {
        'well_head': {
            'time': np.array([0, 1, 2, 3, 4, 5]),
            'oil': {
                'wi': np.array([11237.0, 4290.0, 2277.0, 2080.0, 2340.0, 1666.0]),
                'nri': np.array([8989.6, 3432.0, 1821.6, 1664.0, 1872.0, 1332.8]),
                'lease_nri': np.array([8989.6, 3432.0, 1821.6, 1664.0, 1872.0, 1332.8]),
                'one_minus_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_nri': np.array([2247.4, 858.0, 455.4, 416.0, 468.0, 333.2]),
                'one_minus_lease_nri': np.array([2247.4, 858.0, 455.4, 416.0, 468.0, 333.2]),
                'wi_minus_one': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'nri_minus_one': np.array([-2247.4, -858.0, -455.4, -416.0, -468.0, -333.2]),
                'lease_nri_minus_one': np.array([-2247.4, -858.0, -455.4, -416.0, -468.0, -333.2]),
                '100_pct_wi': np.array([11237.0, 4290.0, 2277.0, 2080.0, 2340.0, 1666.0]),
            },
            'gas': {
                'wi': np.array([13939.0, 8264.0, 5867.0, 2616.0, 0.0, 4695.0]),
                'nri': np.array([11151.2, 6611.2, 4693.6, 2092.8, 0.0, 3756.0]),
                'lease_nri': np.array([11151.2, 6611.2, 4693.6, 2092.8, 0.0, 3756.0]),
                'one_minus_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_nri': np.array([2787.8, 1652.8, 1173.4, 523.2, 0.0, 939.0]),
                'one_minus_lease_nri': np.array([2787.8, 1652.8, 1173.4, 523.2, 0.0, 939.0]),
                'wi_minus_one': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'nri_minus_one': np.array([-2787.8, -1652.8, -1173.4, -523.2, -0.0, -939.0]),
                'lease_nri_minus_one': np.array([-2787.8, -1652.8, -1173.4, -523.2, -0.0, -939.0]),
                '100_pct_wi': np.array([13939.0, 8264.0, 5867.0, 2616.0, 0.0, 4695.0]),
            },
            'water': {
                'wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'nri': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'lease_nri': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_nri': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_lease_nri': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'wi_minus_one': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'nri_minus_one': np.array([-0.0, -0.0, -0.0, -0.0, -0.0, -0.0]),
                'lease_nri_minus_one': np.array([-0.0, -0.0, -0.0, -0.0, -0.0, -0.0]),
                '100_pct_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            },
        },
        'unshrunk': {
            'time': np.array([0, 1, 2, 3, 4, 5]),
            'oil': {
                'wi': np.array([11237.0, 4290.0, 2277.0, 2080.0, 2340.0, 1666.0]),
                'nri': np.array([8989.6, 3432.0, 1821.6, 1664.0, 1872.0, 1332.8]),
                'lease_nri': np.array([8989.6, 3432.0, 1821.6, 1664.0, 1872.0, 1332.8]),
                'one_minus_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_nri': np.array([2247.4, 858.0, 455.4, 416.0, 468.0, 333.2]),
                'one_minus_lease_nri': np.array([2247.4, 858.0, 455.4, 416.0, 468.0, 333.2]),
                'wi_minus_one': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'nri_minus_one': np.array([-2247.4, -858.0, -455.4, -416.0, -468.0, -333.2]),
                'lease_nri_minus_one': np.array([-2247.4, -858.0, -455.4, -416.0, -468.0, -333.2]),
                '100_pct_wi': np.array([11237.0, 4290.0, 2277.0, 2080.0, 2340.0, 1666.0]),
            },
            'gas': {
                'wi': np.array([13939.0, 8264.0, 5867.0, 2616.0, 0.0, 4695.0]),
                'nri': np.array([11151.2, 6611.2, 4693.6, 2092.8, 0.0, 3756.0]),
                'lease_nri': np.array([11151.2, 6611.2, 4693.6, 2092.8, 0.0, 3756.0]),
                'one_minus_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_nri': np.array([2787.8, 1652.8, 1173.4, 523.2, 0.0, 939.0]),
                'one_minus_lease_nri': np.array([2787.8, 1652.8, 1173.4, 523.2, 0.0, 939.0]),
                'wi_minus_one': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'nri_minus_one': np.array([-2787.8, -1652.8, -1173.4, -523.2, -0.0, -939.0]),
                'lease_nri_minus_one': np.array([-2787.8, -1652.8, -1173.4, -523.2, -0.0, -939.0]),
                '100_pct_wi': np.array([13939.0, 8264.0, 5867.0, 2616.0, 0.0, 4695.0]),
            },
            'water': {
                'wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'nri': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'lease_nri': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_nri': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_lease_nri': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'wi_minus_one': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'nri_minus_one': np.array([-0.0, -0.0, -0.0, -0.0, -0.0, -0.0]),
                'lease_nri_minus_one': np.array([-0.0, -0.0, -0.0, -0.0, -0.0, -0.0]),
                '100_pct_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            },
        },
        'sales': {
            'time': np.array([0, 1, 2, 3, 4, 5]),
            'oil': {
                'wi': np.array([11237.0, 4290.0, 2277.0, 2080.0, 2340.0, 1666.0]),
                'nri': np.array([8989.6, 3432.0, 1821.6, 1664.0, 1872.0, 1332.8]),
                'lease_nri': np.array([8989.6, 3432.0, 1821.6, 1664.0, 1872.0, 1332.8]),
                'one_minus_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_nri': np.array([2247.4, 858.0, 455.4, 416.0, 468.0, 333.2]),
                'one_minus_lease_nri': np.array([2247.4, 858.0, 455.4, 416.0, 468.0, 333.2]),
                'wi_minus_one': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'nri_minus_one': np.array([-2247.4, -858.0, -455.4, -416.0, -468.0, -333.2]),
                'lease_nri_minus_one': np.array([-2247.4, -858.0, -455.4, -416.0, -468.0, -333.2]),
                '100_pct_wi': np.array([11237.0, 4290.0, 2277.0, 2080.0, 2340.0, 1666.0]),
            },
            'gas': {
                'wi': np.array([13939.0, 8264.0, 5867.0, 2616.0, 0.0, 4695.0]),
                'nri': np.array([11151.2, 6611.2, 4693.6, 2092.8, 0.0, 3756.0]),
                'lease_nri': np.array([11151.2, 6611.2, 4693.6, 2092.8, 0.0, 3756.0]),
                'one_minus_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_nri': np.array([2787.8, 1652.8, 1173.4, 523.2, 0.0, 939.0]),
                'one_minus_lease_nri': np.array([2787.8, 1652.8, 1173.4, 523.2, 0.0, 939.0]),
                'wi_minus_one': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'nri_minus_one': np.array([-2787.8, -1652.8, -1173.4, -523.2, -0.0, -939.0]),
                'lease_nri_minus_one': np.array([-2787.8, -1652.8, -1173.4, -523.2, -0.0, -939.0]),
                '100_pct_wi': np.array([13939.0, 8264.0, 5867.0, 2616.0, 0.0, 4695.0]),
            },
            'water': {
                'wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'nri': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'lease_nri': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_nri': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_lease_nri': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'wi_minus_one': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'nri_minus_one': np.array([-0.0, -0.0, -0.0, -0.0, -0.0, -0.0]),
                'lease_nri_minus_one': np.array([-0.0, -0.0, -0.0, -0.0, -0.0, -0.0]),
                '100_pct_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            },
            'ngl': {
                'wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'nri': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'lease_nri': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_nri': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_lease_nri': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'wi_minus_one': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'nri_minus_one': np.array([-0.0, -0.0, -0.0, -0.0, -0.0, -0.0]),
                'lease_nri_minus_one': np.array([-0.0, -0.0, -0.0, -0.0, -0.0, -0.0]),
                '100_pct_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            },
            'drip_condensate': {
                'wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'nri': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'lease_nri': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_nri': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_lease_nri': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'wi_minus_one': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'nri_minus_one': np.array([-0.0, -0.0, -0.0, -0.0, -0.0, -0.0]),
                'lease_nri_minus_one': np.array([-0.0, -0.0, -0.0, -0.0, -0.0, -0.0]),
                '100_pct_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            },
        },
        'boe': {
            'well_head_boe': {
                'total': np.array([
                    13560.16666667,
                    5667.33333333,
                    3254.83333333,
                    2516.0,
                    2340.0,
                    2448.5,
                ]),
                'wi': np.array([
                    13560.16666667,
                    5667.33333333,
                    3254.83333333,
                    2516.0,
                    2340.0,
                    2448.5,
                ]),
                'nri': np.array([
                    10848.13333333,
                    4533.86666667,
                    2603.86666667,
                    2012.8,
                    1872.0,
                    1958.8,
                ]),
                'lease_nri': np.array([
                    10848.13333333,
                    4533.86666667,
                    2603.86666667,
                    2012.8,
                    1872.0,
                    1958.8,
                ]),
                'one_minus_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_nri': np.array([2712.03333333, 1133.46666667, 650.96666667, 503.2, 468.0, 489.7]),
                'one_minus_lease_nri': np.array([2712.03333333, 1133.46666667, 650.96666667, 503.2, 468.0, 489.7]),
                'wi_minus_one': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'nri_minus_one': np.array([
                    -2712.03333333,
                    -1133.46666667,
                    -650.96666667,
                    -503.2,
                    -468.0,
                    -489.7,
                ]),
                'lease_nri_minus_one': np.array([
                    -2712.03333333,
                    -1133.46666667,
                    -650.96666667,
                    -503.2,
                    -468.0,
                    -489.7,
                ]),
                '100_pct_wi': np.array([
                    13560.16666667,
                    5667.33333333,
                    3254.83333333,
                    2516.0,
                    2340.0,
                    2448.5,
                ]),
            },
            'unshrunk_boe': {
                'total': np.array([
                    13560.16666667,
                    5667.33333333,
                    3254.83333333,
                    2516.0,
                    2340.0,
                    2448.5,
                ]),
                'wi': np.array([
                    13560.16666667,
                    5667.33333333,
                    3254.83333333,
                    2516.0,
                    2340.0,
                    2448.5,
                ]),
                'nri': np.array([
                    10848.13333333,
                    4533.86666667,
                    2603.86666667,
                    2012.8,
                    1872.0,
                    1958.8,
                ]),
                'lease_nri': np.array([
                    10848.13333333,
                    4533.86666667,
                    2603.86666667,
                    2012.8,
                    1872.0,
                    1958.8,
                ]),
                'one_minus_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_nri': np.array([2712.03333333, 1133.46666667, 650.96666667, 503.2, 468.0, 489.7]),
                'one_minus_lease_nri': np.array([2712.03333333, 1133.46666667, 650.96666667, 503.2, 468.0, 489.7]),
                'wi_minus_one': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'nri_minus_one': np.array([
                    -2712.03333333,
                    -1133.46666667,
                    -650.96666667,
                    -503.2,
                    -468.0,
                    -489.7,
                ]),
                'lease_nri_minus_one': np.array([
                    -2712.03333333,
                    -1133.46666667,
                    -650.96666667,
                    -503.2,
                    -468.0,
                    -489.7,
                ]),
                '100_pct_wi': np.array([
                    13560.16666667,
                    5667.33333333,
                    3254.83333333,
                    2516.0,
                    2340.0,
                    2448.5,
                ]),
            },
            'sales_boe': {
                'total': np.array([
                    13560.16666667,
                    5667.33333333,
                    3254.83333333,
                    2516.0,
                    2340.0,
                    2448.5,
                ]),
                'wi': np.array([
                    13560.16666667,
                    5667.33333333,
                    3254.83333333,
                    2516.0,
                    2340.0,
                    2448.5,
                ]),
                'nri': np.array([
                    10848.13333333,
                    4533.86666667,
                    2603.86666667,
                    2012.8,
                    1872.0,
                    1958.8,
                ]),
                'lease_nri': np.array([
                    10848.13333333,
                    4533.86666667,
                    2603.86666667,
                    2012.8,
                    1872.0,
                    1958.8,
                ]),
                'one_minus_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_nri': np.array([2712.03333333, 1133.46666667, 650.96666667, 503.2, 468.0, 489.7]),
                'one_minus_lease_nri': np.array([2712.03333333, 1133.46666667, 650.96666667, 503.2, 468.0, 489.7]),
                'wi_minus_one': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'nri_minus_one': np.array([
                    -2712.03333333,
                    -1133.46666667,
                    -650.96666667,
                    -503.2,
                    -468.0,
                    -489.7,
                ]),
                'lease_nri_minus_one': np.array([
                    -2712.03333333,
                    -1133.46666667,
                    -650.96666667,
                    -503.2,
                    -468.0,
                    -489.7,
                ]),
                '100_pct_wi': np.array([
                    13560.16666667,
                    5667.33333333,
                    3254.83333333,
                    2516.0,
                    2340.0,
                    2448.5,
                ]),
            },
        },
        'mcfe': {
            'well_head_mcfe': {
                'total': np.array([81361.0, 34004.0, 19529.0, 15096.0, 14040.0, 14691.0]),
                'wi': np.array([81361.0, 34004.0, 19529.0, 15096.0, 14040.0, 14691.0]),
                'nri': np.array([65088.8, 27203.2, 15623.2, 12076.8, 11232.0, 11752.8]),
                'lease_nri': np.array([65088.8, 27203.2, 15623.2, 12076.8, 11232.0, 11752.8]),
                'one_minus_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_nri': np.array([16272.2, 6800.8, 3905.8, 3019.2, 2808.0, 2938.2]),
                'one_minus_lease_nri': np.array([16272.2, 6800.8, 3905.8, 3019.2, 2808.0, 2938.2]),
                'wi_minus_one': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'nri_minus_one': np.array([-16272.2, -6800.8, -3905.8, -3019.2, -2808.0, -2938.2]),
                'lease_nri_minus_one': np.array([-16272.2, -6800.8, -3905.8, -3019.2, -2808.0, -2938.2]),
                '100_pct_wi': np.array([81361.0, 34004.0, 19529.0, 15096.0, 14040.0, 14691.0]),
            },
            'unshrunk_mcfe': {
                'total': np.array([81361.0, 34004.0, 19529.0, 15096.0, 14040.0, 14691.0]),
                'wi': np.array([81361.0, 34004.0, 19529.0, 15096.0, 14040.0, 14691.0]),
                'nri': np.array([65088.8, 27203.2, 15623.2, 12076.8, 11232.0, 11752.8]),
                'lease_nri': np.array([65088.8, 27203.2, 15623.2, 12076.8, 11232.0, 11752.8]),
                'one_minus_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_nri': np.array([16272.2, 6800.8, 3905.8, 3019.2, 2808.0, 2938.2]),
                'one_minus_lease_nri': np.array([16272.2, 6800.8, 3905.8, 3019.2, 2808.0, 2938.2]),
                'wi_minus_one': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'nri_minus_one': np.array([-16272.2, -6800.8, -3905.8, -3019.2, -2808.0, -2938.2]),
                'lease_nri_minus_one': np.array([-16272.2, -6800.8, -3905.8, -3019.2, -2808.0, -2938.2]),
                '100_pct_wi': np.array([81361.0, 34004.0, 19529.0, 15096.0, 14040.0, 14691.0]),
            },
            'sales_mcfe': {
                'total': np.array([81361.0, 34004.0, 19529.0, 15096.0, 14040.0, 14691.0]),
                'wi': np.array([81361.0, 34004.0, 19529.0, 15096.0, 14040.0, 14691.0]),
                'nri': np.array([65088.8, 27203.2, 15623.2, 12076.8, 11232.0, 11752.8]),
                'lease_nri': np.array([65088.8, 27203.2, 15623.2, 12076.8, 11232.0, 11752.8]),
                'one_minus_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_nri': np.array([16272.2, 6800.8, 3905.8, 3019.2, 2808.0, 2938.2]),
                'one_minus_lease_nri': np.array([16272.2, 6800.8, 3905.8, 3019.2, 2808.0, 2938.2]),
                'wi_minus_one': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'nri_minus_one': np.array([-16272.2, -6800.8, -3905.8, -3019.2, -2808.0, -2938.2]),
                'lease_nri_minus_one': np.array([-16272.2, -6800.8, -3905.8, -3019.2, -2808.0, -2938.2]),
                '100_pct_wi': np.array([81361.0, 34004.0, 19529.0, 15096.0, 14040.0, 14691.0]),
            },
        },
    },
}

# ProductionTax parameters
ad_deduct_generator = {
    'unecon': np.array([0.0]),
    'no_deduct': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
    'deduct': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
}

se_deduct_generator = {
    'unecon': {
        'oil': np.array([0.0]),
        'gas': np.array([0.0]),
        'ngl': np.array([0.0]),
        'drip_condensate': np.array([0.0]),
    },
    'no_deduct': {
        'oil': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'gas': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'ngl': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        'drip_condensate': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
    },
    'deduct': {
        'oil': np.array([10.0, 10.0, 10.0, 10.0, 10.0, 10.0]),
        'gas': np.array([10.0, 10.0, 10.0, 10.0, 10.0, 10.0]),
        'ngl': np.array([10.0, 10.0, 10.0, 10.0, 10.0, 10.0]),
        'drip_condensate': np.array([10.0, 10.0, 10.0, 10.0, 10.0, 10.0]),
    },
}

revenue_dict_generator = {
    'unecon': {
        'oil': {
            'original_price': np.array([0.0]),
            'differentials_1': np.array([0.0]),
            'differentials_2': np.array([0.0]),
            'differentials_3': np.array([0.0]),
            'differential': np.array([0.0]),
            'price_after_diff': np.array([0.0]),
            'net_revenue': np.array([0.0]),
            'gross_revenue': np.array([0.0]),
            'ownership': {
                'wi': np.array([0.0]),
                'nri': np.array([0.0]),
                'lease_nri': np.array([0.0]),
                'one_minus_wi': np.array([0.0]),
                'one_minus_nri': np.array([0.0]),
                'one_minus_lease_nri': np.array([0.0]),
                'wi_minus_one': np.array([-0.0]),
                'nri_minus_one': np.array([-0.0]),
                'lease_nri_minus_one': np.array([-0.0]),
                '100_pct_wi': np.array([0.0]),
            },
        },
        'gas': {
            'original_price': np.array([0.0]),
            'differentials_1': np.array([0.0]),
            'differentials_2': np.array([0.0]),
            'differentials_3': np.array([0.0]),
            'differential': np.array([0.0]),
            'price_after_diff': np.array([0.0]),
            'net_revenue': np.array([0.0]),
            'gross_revenue': np.array([0.0]),
            'ownership': {
                'wi': np.array([0.0]),
                'nri': np.array([0.0]),
                'lease_nri': np.array([0.0]),
                'one_minus_wi': np.array([0.0]),
                'one_minus_nri': np.array([0.0]),
                'one_minus_lease_nri': np.array([0.0]),
                'wi_minus_one': np.array([-0.0]),
                'nri_minus_one': np.array([-0.0]),
                'lease_nri_minus_one': np.array([-0.0]),
                '100_pct_wi': np.array([0.0]),
            },
        },
        'ngl': {
            'original_price': np.array([0.0]),
            'differentials_1': np.array([0.0]),
            'differentials_2': np.array([0.0]),
            'differentials_3': np.array([0.0]),
            'differential': np.array([0.0]),
            'price_after_diff': np.array([0.0]),
            'net_revenue': np.array([0.0]),
            'gross_revenue': np.array([0.0]),
            'ownership': {
                'wi': np.array([0.0]),
                'nri': np.array([0.0]),
                'lease_nri': np.array([0.0]),
                'one_minus_wi': np.array([0.0]),
                'one_minus_nri': np.array([0.0]),
                'one_minus_lease_nri': np.array([0.0]),
                'wi_minus_one': np.array([-0.0]),
                'nri_minus_one': np.array([-0.0]),
                'lease_nri_minus_one': np.array([-0.0]),
                '100_pct_wi': np.array([0.0]),
            },
        },
        'drip_condensate': {
            'original_price': np.array([0.0]),
            'differentials_1': np.array([0.0]),
            'differentials_2': np.array([0.0]),
            'differentials_3': np.array([0.0]),
            'differential': np.array([0.0]),
            'price_after_diff': np.array([0.0]),
            'net_revenue': np.array([0.0]),
            'gross_revenue': np.array([0.0]),
            'ownership': {
                'wi': np.array([0.0]),
                'nri': np.array([0.0]),
                'lease_nri': np.array([0.0]),
                'one_minus_wi': np.array([0.0]),
                'one_minus_nri': np.array([0.0]),
                'one_minus_lease_nri': np.array([0.0]),
                'wi_minus_one': np.array([-0.0]),
                'nri_minus_one': np.array([-0.0]),
                'lease_nri_minus_one': np.array([-0.0]),
                '100_pct_wi': np.array([0.0]),
            },
        },
    },
    'econ': {
        'oil': {
            'original_price': np.array([80.0, 80.0, 80.0, 80.0, 80.0, 80.0]),
            'differentials_1': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'differentials_2': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'differentials_3': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'differential': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'price_after_diff': np.array([80.0, 80.0, 80.0, 80.0, 80.0, 80.0]),
            'net_revenue': np.array([719168.0, 274560.0, 145728.0, 133120.0, 149760.0, 106624.0]),
            'gross_revenue': np.array([898960.0, 343200.0, 182160.0, 166400.0, 187200.0, 133280.0]),
            'ownership': {
                'wi': np.array([898960.0, 343200.0, 182160.0, 166400.0, 187200.0, 133280.0]),
                'nri': np.array([719168.0, 274560.0, 145728.0, 133120.0, 149760.0, 106624.0]),
                'lease_nri': np.array([719168.0, 274560.0, 145728.0, 133120.0, 149760.0, 106624.0]),
                'one_minus_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_nri': np.array([179792.0, 68640.0, 36432.0, 33280.0, 37440.0, 26656.0]),
                'one_minus_lease_nri': np.array([179792.0, 68640.0, 36432.0, 33280.0, 37440.0, 26656.0]),
                'wi_minus_one': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'nri_minus_one': np.array([-179792.0, -68640.0, -36432.0, -33280.0, -37440.0, -26656.0]),
                'lease_nri_minus_one': np.array([-179792.0, -68640.0, -36432.0, -33280.0, -37440.0, -26656.0]),
                '100_pct_wi': np.array([898960.0, 343200.0, 182160.0, 166400.0, 187200.0, 133280.0]),
            },
        },
        'gas': {
            'original_price': np.array([4.0, 4.0, 4.0, 4.0, 4.0, 4.0]),
            'differentials_1': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'differentials_2': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'differentials_3': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'differential': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'price_after_diff': np.array([4.0, 4.0, 4.0, 4.0, 4.0, 4.0]),
            'net_revenue': np.array([44604.8, 26444.8, 18774.4, 8371.2, 0.0, 15024.0]),
            'gross_revenue': np.array([55756.0, 33056.0, 23468.0, 10464.0, 0.0, 18780.0]),
            'ownership': {
                'wi': np.array([55756.0, 33056.0, 23468.0, 10464.0, 0.0, 18780.0]),
                'nri': np.array([44604.8, 26444.8, 18774.4, 8371.2, 0.0, 15024.0]),
                'lease_nri': np.array([44604.8, 26444.8, 18774.4, 8371.2, 0.0, 15024.0]),
                'one_minus_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_nri': np.array([11151.2, 6611.2, 4693.6, 2092.8, 0.0, 3756.0]),
                'one_minus_lease_nri': np.array([11151.2, 6611.2, 4693.6, 2092.8, 0.0, 3756.0]),
                'wi_minus_one': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'nri_minus_one': np.array([-11151.2, -6611.2, -4693.6, -2092.8, -0.0, -3756.0]),
                'lease_nri_minus_one': np.array([-11151.2, -6611.2, -4693.6, -2092.8, -0.0, -3756.0]),
                '100_pct_wi': np.array([55756.0, 33056.0, 23468.0, 10464.0, 0.0, 18780.0]),
            },
        },
        'ngl': {
            'original_price': np.array([80.0, 80.0, 80.0, 80.0, 80.0, 80.0]),
            'differentials_1': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'differentials_2': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'differentials_3': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'differential': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'price_after_diff': np.array([80.0, 80.0, 80.0, 80.0, 80.0, 80.0]),
            'net_revenue': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'gross_revenue': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'ownership': {
                'wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'nri': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'lease_nri': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_nri': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_lease_nri': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'wi_minus_one': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'nri_minus_one': np.array([-0.0, -0.0, -0.0, -0.0, -0.0, -0.0]),
                'lease_nri_minus_one': np.array([-0.0, -0.0, -0.0, -0.0, -0.0, -0.0]),
                '100_pct_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            },
        },
        'drip_condensate': {
            'original_price': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'differentials_1': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'differentials_2': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'differentials_3': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'differential': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'price_after_diff': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'net_revenue': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'gross_revenue': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'ownership': {
                'wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'nri': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'lease_nri': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_nri': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'one_minus_lease_nri': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'wi_minus_one': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'nri_minus_one': np.array([-0.0, -0.0, -0.0, -0.0, -0.0, -0.0]),
                'lease_nri_minus_one': np.array([-0.0, -0.0, -0.0, -0.0, -0.0, -0.0]),
                '100_pct_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            },
        },
    },
}

price_generator = {
    'unecon': {
        'price_dict': {
            'oil': np.array([0.0]),
            'gas': np.array([0.0]),
            'ngl': np.array([1.0]),
            'drip_condensate': np.array([0.0]),
        },
        'price_parameter': {
            'oil': 'number',
            'gas': 'mmbtu',
            'ngl': 'ratio_of_oil',
            'drip_condensate': 'number',
        },
        'price_cap': {
            'oil': '',
            'gas': '',
            'ngl': '',
            'drip_condensate': ''
        },
        'price_escalation': {
            'oil': None,
            'gas': None,
            'ngl': None,
            'drip_condensate': None,
        },
    },
    'econ': {
        'price_dict': {
            'oil': np.array([100.0, 100.0, 100.0, 100.0, 100.0, 100.0]),
            'gas': np.array([5.0, 5.0, 5.0, 5.0, 5.0, 5.0]),
            'ngl': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
            'drip_condensate': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        },
        'price_parameter': {
            'oil': 'number',
            'gas': 'mmbtu',
            'ngl': 'ratio_of_oil',
            'drip_condensate': 'number',
        },
        'price_cap': {
            'oil': 80,
            'gas': 4,
            'ngl': '',
            'drip_condensate': ''
        },
        'price_escalation': {
            'oil': {
                'escalation_type': 'add',
                'escalation_values': np.array([0.0, 0.16666667, 0.33333333, 0.5, 0.66666667, 0.83333333]),
            },
            'gas': None,
            'ngl': None,
            'drip_condensate': None,
        },
    },
}

ownership_dict_by_phase_generator = {
    'unecon': {
        'oil': {
            'wi': np.array([0.9]),
            'nri': np.array([0.8]),
            'lease_nri': np.array([0.8]),
            'one_minus_wi': np.array([0.1]),
            'one_minus_nri': np.array([0.2]),
            'one_minus_lease_nri': np.array([0.2]),
            'wi_minus_one': np.array([-0.1]),
            'nri_minus_one': np.array([-0.2]),
            'lease_nri_minus_one': np.array([-0.2]),
            '100_pct_wi': np.array([1]),
        },
        'gas': {
            'wi': np.array([0.9]),
            'nri': np.array([0.8]),
            'lease_nri': np.array([0.8]),
            'one_minus_wi': np.array([0.1]),
            'one_minus_nri': np.array([0.2]),
            'one_minus_lease_nri': np.array([0.2]),
            'wi_minus_one': np.array([-0.1]),
            'nri_minus_one': np.array([-0.2]),
            'lease_nri_minus_one': np.array([-0.2]),
            '100_pct_wi': np.array([1]),
        },
        'ngl': {
            'wi': np.array([0.9]),
            'nri': np.array([0.8]),
            'lease_nri': np.array([0.8]),
            'one_minus_wi': np.array([0.1]),
            'one_minus_nri': np.array([0.2]),
            'one_minus_lease_nri': np.array([0.2]),
            'wi_minus_one': np.array([-0.1]),
            'nri_minus_one': np.array([-0.2]),
            'lease_nri_minus_one': np.array([-0.2]),
            '100_pct_wi': np.array([1]),
        },
        'drip_condensate': {
            'wi': np.array([0.9]),
            'nri': np.array([0.8]),
            'lease_nri': np.array([0.8]),
            'one_minus_wi': np.array([0.1]),
            'one_minus_nri': np.array([0.2]),
            'one_minus_lease_nri': np.array([0.2]),
            'wi_minus_one': np.array([-0.1]),
            'nri_minus_one': np.array([-0.2]),
            'lease_nri_minus_one': np.array([-0.2]),
            '100_pct_wi': np.array([1]),
        },
        'original': {
            'wi': np.array([0.9]),
            'nri': np.array([0.8]),
            'lease_nri': np.array([0.8]),
            'one_minus_wi': np.array([0.1]),
            'one_minus_nri': np.array([0.2]),
            'one_minus_lease_nri': np.array([0.2]),
            'wi_minus_one': np.array([-0.1]),
            'nri_minus_one': np.array([-0.2]),
            'lease_nri_minus_one': np.array([-0.2]),
            '100_pct_wi': np.array([1]),
        },
    },
    'econ': {
        'oil': {
            'wi': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
            'nri': np.array([0.8, 0.8, 0.8, 0.8, 0.8, 0.8]),
            'lease_nri': np.array([0.8, 0.8, 0.8, 0.8, 0.8, 0.8]),
            'one_minus_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'one_minus_nri': np.array([0.2, 0.2, 0.2, 0.2, 0.2, 0.2]),
            'one_minus_lease_nri': np.array([0.2, 0.2, 0.2, 0.2, 0.2, 0.2]),
            'wi_minus_one': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'nri_minus_one': np.array([-0.2, -0.2, -0.2, -0.2, -0.2, -0.2]),
            'lease_nri_minus_one': np.array([-0.2, -0.2, -0.2, -0.2, -0.2, -0.2]),
            '100_pct_wi': np.array([1, 1, 1, 1, 1, 1]),
        },
        'gas': {
            'wi': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
            'nri': np.array([0.8, 0.8, 0.8, 0.8, 0.8, 0.8]),
            'lease_nri': np.array([0.8, 0.8, 0.8, 0.8, 0.8, 0.8]),
            'one_minus_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'one_minus_nri': np.array([0.2, 0.2, 0.2, 0.2, 0.2, 0.2]),
            'one_minus_lease_nri': np.array([0.2, 0.2, 0.2, 0.2, 0.2, 0.2]),
            'wi_minus_one': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'nri_minus_one': np.array([-0.2, -0.2, -0.2, -0.2, -0.2, -0.2]),
            'lease_nri_minus_one': np.array([-0.2, -0.2, -0.2, -0.2, -0.2, -0.2]),
            '100_pct_wi': np.array([1, 1, 1, 1, 1, 1]),
        },
        'ngl': {
            'wi': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
            'nri': np.array([0.8, 0.8, 0.8, 0.8, 0.8, 0.8]),
            'lease_nri': np.array([0.8, 0.8, 0.8, 0.8, 0.8, 0.8]),
            'one_minus_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'one_minus_nri': np.array([0.2, 0.2, 0.2, 0.2, 0.2, 0.2]),
            'one_minus_lease_nri': np.array([0.2, 0.2, 0.2, 0.2, 0.2, 0.2]),
            'wi_minus_one': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'nri_minus_one': np.array([-0.2, -0.2, -0.2, -0.2, -0.2, -0.2]),
            'lease_nri_minus_one': np.array([-0.2, -0.2, -0.2, -0.2, -0.2, -0.2]),
            '100_pct_wi': np.array([1, 1, 1, 1, 1, 1]),
        },
        'drip_condensate': {
            'wi': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
            'nri': np.array([0.8, 0.8, 0.8, 0.8, 0.8, 0.8]),
            'lease_nri': np.array([0.8, 0.8, 0.8, 0.8, 0.8, 0.8]),
            'one_minus_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'one_minus_nri': np.array([0.2, 0.2, 0.2, 0.2, 0.2, 0.2]),
            'one_minus_lease_nri': np.array([0.2, 0.2, 0.2, 0.2, 0.2, 0.2]),
            'wi_minus_one': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'nri_minus_one': np.array([-0.2, -0.2, -0.2, -0.2, -0.2, -0.2]),
            'lease_nri_minus_one': np.array([-0.2, -0.2, -0.2, -0.2, -0.2, -0.2]),
            '100_pct_wi': np.array([1, 1, 1, 1, 1, 1]),
        },
        'original': {
            'wi': np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0]),
            'nri': np.array([0.8, 0.8, 0.8, 0.8, 0.8, 0.8]),
            'lease_nri': np.array([0.8, 0.8, 0.8, 0.8, 0.8, 0.8]),
            'one_minus_wi': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'one_minus_nri': np.array([0.2, 0.2, 0.2, 0.2, 0.2, 0.2]),
            'one_minus_lease_nri': np.array([0.2, 0.2, 0.2, 0.2, 0.2, 0.2]),
            'wi_minus_one': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            'nri_minus_one': np.array([-0.2, -0.2, -0.2, -0.2, -0.2, -0.2]),
            'lease_nri_minus_one': np.array([-0.2, -0.2, -0.2, -0.2, -0.2, -0.2]),
            '100_pct_wi': np.array([1, 1, 1, 1, 1, 1]),
        },
    },
}

t_all_generator = {'unecon': np.array([0]), 'econ': np.array([0, 1, 2, 3, 4, 5])}

well_header_info = {
    '_id': ObjectId('5e272d51b78910dd2a1c68a2'),
    'chosenID': '42185305440000',
    'dataSource': 'di',
    'project': None,
    'abstract': '218',
    'api14': '42185305440000',
    'basin': 'GULF COAST CENTRAL',
    'chosenKeyID': 'API14',
    'completion_end_date': datetime.datetime(1995, 11, 21, 0, 0),
    'county': 'GRIMES (TX)',
    'createdAt': datetime.datetime(2020, 1, 21, 16, 56, 48, 975000),
    'current_operator_alias': 'JUNEAU ENERGY, LLC',
    'dataPool': 'external',
    'elevation': 256,
    'elevation_type': 'KB EST',
    'field': 'GIDDINGS',
    'first_fluid_volume': None,
    'first_prod_date': datetime.datetime(1995, 11, 1, 0, 0),
    'first_prod_date_daily_calc': None,
    'first_prod_date_monthly_calc': datetime.datetime(1995, 11, 15, 0, 0),
    'first_prop_weight': None,
    'gas_gatherer': 'ENERGY TRANSFER COMPANY',
    'geohash': '9v7w5wpu5f65',
    'ground_elevation': 233,
    'has_daily': False,
    'has_monthly': True,
    'hole_direction': 'H',
    'inptID': 'INPT.tww1PpQlXo',
    'landing_zone': 'Austin Chalk',
    'lateral_length': None,
    'lease_name': 'DENMAN',
    'lease_number': '22931',
    'location': {
        'type': 'Point',
        'coordinates': [-96.1635097, 30.6195958]
    },
    'lower_perforation': 14485,
    'measured_depth': 14485,
    'mostRecentImport': ObjectId('5e45ca59039b1dc2965de18d'),
    'oil_api_gravity': 38.6,
    'oil_gatherer': 'SUNOCO PTNRS. MKTG.&TERMINALS LP',
    'perf_lateral_length': 4176,
    'play': 'EAGLEBINE',
    'primary_product': None,
    'refrac_fluid_per_perforated_interval': None,
    'refrac_proppant_per_fluid': None,
    'refrac_proppant_per_perforated_interval': None,
    'spud_date': datetime.datetime(1995, 10, 4, 0, 0),
    'state': 'TX',
    'status': 'ACTIVE',
    'surfaceLatitude': 30.6195958,
    'surfaceLongitude': -96.1635097,
    'survey': 'AMOS GATES',
    'toeLatitude': 30.6302317,
    'toeLocation': {
        'type': 'Point',
        'coordinates': [-96.166243, 30.6302317]
    },
    'toeLongitude': -96.166243,
    'total_fluid_per_perforated_interval': None,
    'total_fluid_volume': None,
    'total_prop_weight': None,
    'total_proppant_per_fluid': None,
    'total_proppant_per_perforated_interval': None,
    'true_vertical_depth': 10597.9,
    'upper_perforation': 10309,
    'well_name': 'DENMAN',
    'well_number': '1H',
    'well_type': 'OIL',
    'total_additive_volume': None,
    'total_cluster_count': None,
    'total_stage_count': None,
    'first_fluid_per_perforated_interval': None,
    'first_proppant_per_fluid': None,
    'first_proppant_per_perforated_interval': None,
    'section': None,
    'undiscounted_roi': None,
    'schemaVersion': 1,
    'copied': False,
    'cum_boe': 53.1985,
    'cum_boe_per_perforated_interval': 12.739104406130268,
    'cum_gas': 80.82300000000001,
    'cum_gas_per_perforated_interval': 19.354166666666668,
    'cum_gor': 2034.4089810712846,
    'cum_mmcfge': 319.191,
    'cum_mmcfge_per_perforated_interval': 76.4346264367816,
    'cum_oil': 39.728,
    'cum_oil_per_perforated_interval': 9.513409961685824,
    'cum_water': 0,
    'cum_water_per_perforated_interval': 0,
    'first_12_boe': 37.2595,
    'first_12_boe_per_perforated_interval': 8.922294061302683,
    'first_12_gas': 52.503,
    'first_12_gas_per_perforated_interval': 12.572557471264368,
    'first_12_gor': 1841.628959276018,
    'first_12_mmcfge': 223.557,
    'first_12_mmcfge_per_perforated_interval': 53.53376436781609,
    'first_12_oil': 28.509,
    'first_12_oil_per_perforated_interval': 6.826867816091954,
    'first_12_water': 0,
    'first_12_water_per_perforated_interval': 0,
    'first_6_boe': 29.786833333333334,
    'first_6_boe_per_perforated_interval': 7.132862388250319,
    'first_6_gas': 35.381,
    'first_6_gas_per_perforated_interval': 8.472461685823754,
    'first_6_gor': 1480.9962327333612,
    'first_6_mmcfge': 178.721,
    'first_6_mmcfge_per_perforated_interval': 42.79717432950192,
    'first_6_oil': 23.89,
    'first_6_oil_per_perforated_interval': 5.720785440613027,
    'first_6_water': 0,
    'first_6_water_per_perforated_interval': 0,
    'last_12_boe': 0.35633333333333334,
    'last_12_boe_per_perforated_interval': 0.08532886334610472,
    'last_12_gas': 0.332,
    'last_12_gas_per_perforated_interval': 0.07950191570881227,
    'last_12_gor': 1102.9900332225914,
    'last_12_mmcfge': 2.138,
    'last_12_mmcfge_per_perforated_interval': 0.5119731800766283,
    'last_12_oil': 0.301,
    'last_12_oil_per_perforated_interval': 0.07207854406130268,
    'last_12_water': 0,
    'last_12_water_per_perforated_interval': 0,
    'last_month_boe': 0.0026666666666666666,
    'last_month_boe_per_perforated_interval': 0.0006385696040868454,
    'last_month_gas': 0.016,
    'last_month_gas_per_perforated_interval': 0.0038314176245210726,
    'last_month_gor': None,
    'last_month_mmcfge': 0.016,
    'last_month_mmcfge_per_perforated_interval': 0.0038314176245210726,
    'last_month_oil': 0,
    'last_month_oil_per_perforated_interval': 0,
    'last_month_water': 0,
    'last_month_water_per_perforated_interval': 0,
    'month_produced': 194,
    'updatedAt': datetime.datetime(2022, 12, 29, 14, 0, 2, 340000),
    '_project_custom_header': True,
    '_project_custom_header_1': 5,
    '_project_custom_header_2': 'test',
    '_project_custom_header_3': datetime.datetime(2022, 12, 8, 0, 0),
    '_project_custom_header_4': 5,
}

schedule = {}

ad_valorem_tax_model = {
    'deduct_severance_tax': 'no',
    'shrinkage_condition': 'shrunk',
    'calculation': 'nri',
    'rate_type': 'gross_well_head',
    'rows_calculation_method': 'non_monotonic',
    'escalation_model': {
        'escalation_model_1': 'none',
        'escalation_model_2': 'none',
        'ad_valorem_tax': [{
            'pct_of_revenue': 2.5,
            'entire_well_life': 'Flat'
        }],
        'ad_valorem_tax_2': [{
            'dollar_per_boe': 0,
            'entire_well_life': 'Flat'
        }],
    },
    'rows': [{
        'pct_of_revenue': 2.5,
        'dollar_per_boe': 0,
        'entire_well_life': 'Flat'
    }],
}

severance_tax_model = {
    'state': 'texas',
    'shrinkage_condition': 'shrunk',
    'calculation': 'nri',
    'rate_type': 'gross_well_head',
    'rows_calculation_method': 'non_monotonic',
    'oil': {
        'escalation_model': {
            'escalation_model_1': 'none',
            'escalation_model_2': 'none',
            'severance_tax': [{
                'pct_of_revenue': 4.6,
                'entire_well_life': 'Flat'
            }],
            'severance_tax_2': [{
                'dollar_per_bbl': 0.0081,
                'entire_well_life': 'Flat'
            }],
        },
        'rows': [{
            'pct_of_revenue': 4.6,
            'dollar_per_bbl': 0.0081,
            'entire_well_life': 'Flat',
        }],
    },
    'gas': {
        'escalation_model': {
            'escalation_model_1': 'none',
            'escalation_model_2': 'none',
            'severance_tax': [{
                'pct_of_revenue': 7.5,
                'entire_well_life': 'Flat'
            }],
            'severance_tax_2': [{
                'dollar_per_mcf': 0.0007,
                'entire_well_life': 'Flat'
            }],
        },
        'rows': [{
            'pct_of_revenue': 7.5,
            'dollar_per_mcf': 0.0007,
            'entire_well_life': 'Flat',
        }],
    },
    'ngl': {
        'escalation_model': {
            'escalation_model_1': 'none',
            'escalation_model_2': 'none',
            'severance_tax': [{
                'pct_of_revenue': 7.5,
                'entire_well_life': 'Flat'
            }],
            'severance_tax_2': [{
                'dollar_per_bbl': 0.0001167,
                'entire_well_life': 'Flat'
            }],
        },
        'rows': [{
            'pct_of_revenue': 7.5,
            'dollar_per_bbl': 0.0001167,
            'entire_well_life': 'Flat',
        }],
    },
    'drip_condensate': {
        'escalation_model': {
            'escalation_model_1': 'none',
            'escalation_model_2': 'none',
            'severance_tax': [{
                'pct_of_revenue': 4.6,
                'entire_well_life': 'Flat'
            }],
            'severance_tax_2': [{
                'dollar_per_bbl': 0.0081,
                'entire_well_life': 'Flat'
            }],
        },
        'rows': [{
            'pct_of_revenue': 4.6,
            'dollar_per_bbl': 0.0081,
            'entire_well_life': 'Flat',
        }],
    },
}

date_dict = {
    'unecon': {
        'cf_start_date': datetime.date(1995, 11, 1),
        'cf_end_date': datetime.date(1995, 11, 1),
        'cut_off_date': datetime.date(1995, 11, 1),
        'as_of_date': datetime.date(1995, 11, 1),
        'volume_start_date': datetime.date(1995, 11, 1),
        'first_production_date': datetime.date(1995, 11, 1),
        'first_segment_date': datetime.date(1995, 11, 1),
        'end_history_date': datetime.date(2015, 9, 1),
        'discount_date': datetime.date(1995, 11, 1),
        'original_discount_date': datetime.date(1995, 11, 1),
        'side_phase_end_date': None,
        'start_using_forecast': {
            'oil': None,
            'gas': None,
            'water': None
        },
        'rev_dates': [],
    },
    'econ': {
        'cf_start_date': datetime.date(1995, 11, 1),
        'cf_end_date': datetime.date(1996, 4, 30),
        'cut_off_date': datetime.date(1996, 4, 30),
        'as_of_date': datetime.date(1995, 11, 1),
        'volume_start_date': datetime.date(1995, 11, 1),
        'first_production_date': datetime.date(1995, 11, 1),
        'first_segment_date': datetime.date(1995, 11, 1),
        'end_history_date': datetime.date(2015, 9, 1),
        'discount_date': datetime.date(1995, 11, 1),
        'original_discount_date': datetime.date(1995, 11, 1),
        'side_phase_end_date': None,
        'start_using_forecast': {
            'oil': None,
            'gas': None,
            'water': None
        },
        'rev_dates': [],
    },
}


def tax_deduct_parameters(unecon_bool=False, with_expense=True, deduct=False):
    if unecon_bool:
        return (
            fixed_expenses_unecon,
            variable_expenses_unecon,
            water_disposal_unecon,
            carbon_expenses_unecon,
            ownership_volume_dict['unecon'],
        )
    if not with_expense:
        return (
            fixed_expenses_no_expense,
            variable_expenses_no_expense,
            water_disposal_no_expense,
            carbon_expenses_no_expense,
            ownership_volume_dict['econ'],
        )
    if deduct:
        return (
            fixed_expenses_deduct,
            variable_expenses_deduct,
            water_disposal_deduct,
            carbon_expenses_deduct,
            ownership_volume_dict['econ'],
        )


def tax_deduct_results(unecon_bool=False, with_expense=True, deduct=False):
    if unecon_bool:
        return {
            'se_deduct': {
                'oil': np.array([0.0]),
                'gas': np.array([0.0]),
                'ngl': np.array([0.0]),
                'drip_condensate': np.array([0.0]),
            },
            'ad_deduct': np.array([0.0]),
        }
    if not with_expense or not deduct:
        return {
            'se_deduct': {
                'oil': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'gas': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'ngl': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'drip_condensate': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
            },
            'ad_deduct': np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
        }
    if deduct:
        return {
            'se_deduct': {
                'oil': np.array([5.0, 5.0, 5.0, 5.0, 5.0, 5.0]),
                'gas': np.array([5.0, 5.0, 5.0, 5.0, 5.0, 5.0]),
                'ngl': np.array([5.0, 5.0, 5.0, 5.0, 5.0, 5.0]),
                'drip_condensate': np.array([5.0, 5.0, 5.0, 5.0, 5.0, 5.0]),
            },
            'ad_deduct': np.array([34.0, 34.0, 34.0, 34.0, 34.0, 34.0]),
        }


def production_tax_model(unecon_bool=False):
    '''
    category: [dollars_per_month, dollars_per_bbl, pct_rev]
    '''
    return (
        date_dict['unecon'] if unecon_bool else date_dict['econ'],
        severance_tax_model,
        ad_valorem_tax_model,
        well_header_info,
        schedule,
    )


def production_tax_parameters(unecon_bool=False, is_se_deduct=False, is_ad_deduct=False):
    if unecon_bool:
        return (
            revenue_dict_generator['unecon'],
            ownership_volume_dict['unecon'],
            ownership_dict_by_phase_generator['unecon'],
            se_deduct_generator['unecon'],
            ad_deduct_generator['unecon'],
            price_generator['unecon'],
            t_all_generator['unecon'],
        )
    if is_se_deduct:
        return (
            revenue_dict_generator['econ'],
            ownership_volume_dict['econ'],
            ownership_dict_by_phase_generator['econ'],
            se_deduct_generator['deduct'],
            ad_deduct_generator['no_deduct'],
            price_generator['econ'],
            t_all_generator['econ'],
        )
    if is_ad_deduct:
        return (
            revenue_dict_generator['econ'],
            ownership_volume_dict['econ'],
            ownership_dict_by_phase_generator['econ'],
            se_deduct_generator['no_deduct'],
            ad_deduct_generator['deduct'],
            price_generator['econ'],
            t_all_generator['econ'],
        )


def production_tax_results(unecon_bool=False, is_se_deduct=False, is_ad_deduct=False):
    if unecon_bool:
        return {
            'production_tax_dict': {
                'time': np.array([0]),
                'oil_severance_tax': np.array([0.0]),
                'gas_severance_tax': np.array([0.0]),
                'ngl_severance_tax': np.array([0.0]),
                'drip_condensate_severance_tax': np.array([0.0]),
                'ad_valorem_tax': np.array([0.0]),
                'total_production_tax': np.array([0.0]),
            }
        }
    if is_ad_deduct:
        return {
            'production_tax_dict': {
                'time':
                np.array([0, 1, 2, 3, 4, 5]),
                'oil_severance_tax':
                np.array([
                    33154.54376,
                    12657.5592,
                    6718.24296,
                    6136.9984,
                    6904.1232,
                    4915.49968,
                ]),
                'gas_severance_tax':
                np.array([3353.16584, 1987.98784, 1411.36552, 629.30496, 0.0, 1129.4292]),
                'ngl_severance_tax':
                np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'drip_condensate_severance_tax':
                np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]),
                'ad_valorem_tax':
                np.array([19094.32, 7525.12, 4112.56, 3537.28, 3744.0, 3041.2]),
                'total_production_tax':
                np.array([
                    55602.0296,
                    22170.66704,
                    12242.16848,
                    10303.58336,
                    10648.1232,
                    9086.12888,
                ]),
            }
        }
    if is_se_deduct:
        return {
            'production_tax_dict': {
                'time':
                np.array([0, 1, 2, 3, 4, 5]),
                'oil_severance_tax':
                np.array([
                    33154.08376,
                    12657.0992,
                    6717.78296,
                    6136.5384,
                    6903.6632,
                    4915.03968,
                ]),
                'gas_severance_tax':
                np.array([
                    3.35241584e03,
                    1.98723784e03,
                    1.41061552e03,
                    6.28554960e02,
                    -7.50000000e-01,
                    1.12867920e03,
                ]),
                'ngl_severance_tax':
                np.array([-0.75, -0.75, -0.75, -0.75, -0.75, -0.75]),
                'drip_condensate_severance_tax':
                np.array([-0.46, -0.46, -0.46, -0.46, -0.46, -0.46]),
                'ad_valorem_tax':
                np.array([19094.32, 7525.12, 4112.56, 3537.28, 3744.0, 3041.2]),
                'total_production_tax':
                np.array([
                    55599.6096,
                    22168.24704,
                    12239.74848,
                    10301.16336,
                    10645.7032,
                    9083.70888,
                ]),
            }
        }
