ARG PROJECT_ID=test-combocurve
# ARG PYTHON_VERSION=3.11
# FROM gcr.io/$PROJECT_ID/python-poetry:$PYTHON_VERSION

#####
ARG PYTHON_VERSION=3.9
FROM python:$PYTHON_VERSION-slim

# The following packages are required to build some Python packages like numpy, scipy, etc.
# Google's App Engine default image for Python installs a lot more.
#
# Reference:
#   https://github.com/GoogleCloudPlatform/python-runtime/blob/master/runtime-image/resources/apt-packages.txt
#   https://stackoverflow.com/a/63979755/5003820
#
RUN apt-get update && \
	apt-get install -y \
	ca-certificates \
	curl \
	build-essential \
	make \
	gcc

# Install poetry following their recommended installation instructions
# Reference: https://python-poetry.org/docs/master/#installing-with-the-official-installer
RUN curl -sSL https://install.python-poetry.org | python3 -  --version 1.4.1

# Poetry binary is in this folder, it needs to be added to the PATH
ENV PATH="/root/.local/bin:${PATH}"

# Setup locale. This prevents Python 3 IO encoding issues.
# Reference: https://github.com/GoogleCloudPlatform/python-runtime/blob/master/runtime-image/Dockerfile.in
ENV LANG C.UTF-8
# Make stdout/stderr unbuffered. This prevents delay between output and cloud logging collection.
ENV PYTHONUNBUFFERED 1

# Setup the app working directory
ENV APP_HOME /app
WORKDIR $APP_HOME

# Google services expect the runtime to respond to HTTP requests at port 8080
# Reference: https://cloud.google.com/appengine/docs/flexible/custom-runtimes/quickstart
EXPOSE 8080
ENV PORT 8080

#####

# Keeps Python from generating .pyc files in the container
ENV PYTHONDONTWRITEBYTECODE 1

RUN --mount=type=cache,target=/root/.cache/pip pip install debugpy

WORKDIR /run
RUN apt-get install -y locales && echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen && locale-gen
COPY ./pyproject.toml ./poetry.lock ./
RUN poetry config virtualenvs.create false
RUN poetry install --no-interaction --no-dev --no-root && \
	# The following is needed because lock files written locally can pull setuptools versions incompatible w/
	# our architecture.
	poetry run pip install setuptools --upgrade

WORKDIR /run

CMD python -u -m debugpy --listen 0.0.0.0:5678 -m uvicorn --reload --host 0.0.0.0 --port 5006 cloud_runs.econ_export.api.econ_export_api:app
